[
    {
        "Image": "images/speakers/Fabien_Vauchelles.jpeg",
        "Biography": "Fabien Vauchelles is an Anti-Ban Expert. With over a decade of experience in Web Scraping, Fabien's passion for code and technology helps him to bypass protections. He is the creator of Scrapoxy, a mature free and open-source proxy waterfall tailored for the Web Scraping industry.\r\n\r\nHe had the opportunity of sharing his insights at many events including Devoxx conferences, PyCon, DefCamp, Voxxed Days, API Days, PyData and others.",
        "Title": "Workshop: Master Advanced Web Scraping Techniques in Python",
        "Type": "Workshop",
        "Abstract": "Join me for an Python workshop to unlock the full potential of Web Scraping in Python! You\u2019ll learn advanced techniques for collecting datasets.\r\n\r\nHighlights:\r\n\r\n- Overcome fingerprint challenges and anti-bot measures.\r\n- Discover Scrapoxy, the free and open-source proxies waterfall tailored for Web Scraping",
        "Description": "Here is an overview of the workshop: https://github.com/fabienvauchelles/scraping-workshop\r\n\r\nWe\u2019ll address protection measures step by step in real-time such as proxies and headless browsers.\r\n\r\nEvery attendee will leave with the skills to apply these latest legal techniques to collect data.",
        "Name": "Fabien Vauchelles"
    },
    {
        "Image": "images/speakers/Jesper_Larsson.png",
        "Biography": "Jesper Larsson is a freelance IT security researcher and penetration tester focused on cloud and infrastructure security. Jesper is a member of the well-renowned penetration testing firm Cure53, where he works for multinational clients spanning several fields, helping companies and foundations implement secure infrastructures worldwide. In addition, Jesper has also made an appearance in the movie industry, with his participation as one of the hackers in the SVT production \"_Hackad\".  Furthermore, He is one of the co-founders and organizers of SecurityFest, a technical IT-Security conference on the Swedish west coast, and S\u00e4kerhetspodcasten, Sweden's first IT-Security-focused podcast.",
        "Title": "Keynote - Jesper",
        "Type": "Keynote",
        "Abstract": "TBD",
        "Description": "TBD",
        "Name": "Jesper Larsson"
    },
    {
        "Image": "images/speakers/Ratuja_Reddy.jpeg",
        "Biography": "Ratuja is a senior backend engineer at Tech Lead at Lyst - a shopping app which helps customers have a better experience online shopping.\r\n\r\nShe's currently working in Payments and Marketing Engineering and enjoys playing with new technologies, refactoring code to make it prettier and more satisfying, and all around just solving every day life problems with Python. She's also a member of Lyst's Tech Culture Group and Women in Engineering Committee, helping with initiatives like company wide hack-days and fostering a community of women in tech at Lyst.",
        "Title": "Mastering Generative AI with Python: A Hands-On Workshop with OpenAI and Anthropic",
        "Type": "Workshop",
        "Abstract": "AI is a hot topic these days! However it's not always clear how to get the best use of it, how to test and trust it, and how to build it into your product. In this workshop, we will explore practical applications of Generative AI with Python, focusing on AI models like OpenAI\u2019s GPT-3-5 and Anthropic\u2019s Claude.\r\n\r\nAt Lyst, we have been using OpenAI and Anthropic for the past year in various ways. We will share insights from our own work, where AI has significantly enhanced our day-to-day operations. Using OpenAI to tag customer feedback sentiment has enabled employees to extract actionable insights from large volumes of data, improving decision-making and customer understanding. Using Anthropic's AI models to create product titles has resulted in unique, more descriptive content on Lyst's platform, which has increased customer engagement and sales.\r\n\r\nIn this interactive and engaging workshop, we want attendees to get hands on with these AI models. We'll have OpenAI and Antropic credits for attendees to use, and the workshop will cover essential best practices, prompt engineering strategies to get the model to do what you need it to do, strategies for testing and evaluating, and what to keep in mind when incorporating the model into your product. Ratuja and Sophie have learned a lot of this through trial and error and are excited to share their learnings with the group.\r\n\r\nWe have a dataset where attendees can use AI prompts to enhance the data and serve it in a Django App. This workshop will both give a high level overview of best practices when incorporating AI into your application and give technical users a chance to play around and learn for themselves.",
        "Description": "In this workshop, we will be giving attendees a hands-on approach to using AI models in Python applications, specifically OpenAI\u2019s GPT-3-5 and Anthropic\u2019s Claude.\r\n\r\nRatuja and Sophie are senior backend engineers at Lyst, a fashion marketplace containing over 8 million products. Because of this, we need to make sure we have scalable and robust architecture.\r\n\r\nWe have experimented with using Generative AI to aid this. Ratuja built a Django application using OpenAI to tag themes of customer reviews - allowing us to understand customers better. Sophie used Anthropic models to improve descriptions of products, making them better for customers. She tested various models to find the best one for her use case before implementing in production. We learned a lot through this process and are keen to share more in this workshop!\r\n\r\nThe workshop will follow the structure:\r\n- Overview of Generative AI; using technologies like OpenAI and Anthropic in production\r\n- Overview of the models and choosing the right one for your needs. \r\n- Best practices for prompt engineering.\r\n- Testing strategies to validate your model is performing.\r\n- Attendees get hands on! They will download a dataset and a partially built Django App . They\u2019ll get to use OpenAI and Anthropic credits to enrich the dataset and productionize their models.\r\n- Wrap up, the group can share learnings and discuss ideas they have for using AI in their own projects.\r\n\r\nWe hope this workshop will be useful for Python developers interested in incorporating AI into their work. We believe AI is not a fad and will continue to grow. There\u2019s so much information online; it\u2019s hard to know where to start. With the interactive workshop, we want attendees to leave understanding the basics and best practices in a way which will be transferable to many use cases!",
        "Name": "Ratuja Reddy"
    },
    {
        "Image": "images/speakers/Jim_Dowling.jpg",
        "Biography": "Jim Dowling is CEO of Hopsworks - the AI Lakehouse. He is writing a book on building AI Systems for O'Reilly. He organizes the annual feature store summit and co-organizes PyData Stockholm.",
        "Title": "Building Python based AI Systems with LLMs",
        "Type": "Talk",
        "Abstract": "LLMs are now capable of translating user queries into small Python programs.  In this talk, we will look at how we create AI systems from text with Hopsworks.",
        "Description": "LLMs are now capable of translating user queries into small Python programs.  In this talk, we will look at how we create AI systems from text with Hopsworks. We will decompose AI systems into feature, training, and inference pipelines connected by shared state. Each pipeline will be generated from user queries, helping improve python developer velocity in creating the first version of their AI system.",
        "Name": "Jim Dowling"
    },
    {
        "Image": "images/speakers/Saaya_Sorrells-Weatherford.png",
        "Biography": "Saaya is the CEO and cofounder of Emigreat, a reg-tech startup streamlining global mobility and reducing uncertainty and workload for companies. Prior to moving to Sweden in 2019, she built and exited one of the most prestigious tourism operators in Honduras.\r\nWinner of Di Digital's Female Founder of the Year and Nordic Female Founder of the Year in 2023, she advocates for changes to the Swedish immigration system and creates content to educate immigrants on their visa options and rights.\r\nWhen not discussing immigration politics and policies, she can be caught engaging in discussions on minority representation, female entrepreneurship, sustainable living, and marine conservation.",
        "Title": "Keynote Saaya",
        "Type": "Keynote",
        "Abstract": "TBD",
        "Description": "TBD",
        "Name": "Saaya Sorrells-Weatherford"
    },
    {
        "Image": "images/speakers/Cristi\u00e1n_Maureira-Fredes.jpg",
        "Biography": "Cristi\u00e1n is a PSF fellow and recently elected to the PSF Board of directors.\r\nHe is currently working at The Qt Company as Sr. R&D Manager, in charge of the Qt Core (Berlin) and Qt for Python teams, from which he has been part of the development team for more than 6 years.\r\nIn his spare time, he is a serial conference and community organizer in many countries, and participates in different initiatives like the translation of the Python documentation into Spanish, PyPI moderation, and others related to Open Source.",
        "Title": "Beyond the \"Hello, world!\": from the core up to you",
        "Type": "Keynote",
        "Abstract": "TBD",
        "Description": "For the presentation topic I was thinking of doing some CPython things as well,\r\nbecause I have been noticing that those \"advance\" topics are usually what people request\r\nin conferences. In the middle I will be talking about community and the PSF effort\r\nto improve the current state of things, and how people can contribute to the Python Ecosystem.",
        "Name": "Cristi\u00e1n Maureira-Fredes"
    },
    {
        "Image": "images/speakers/David_Andersson.jpeg",
        "Biography": "After finishing an engineering and finance degree at university, I joined a telco as an engineer and delivered data analytics for consumer customers for the first 2 years. Then I switched to product management and leadership where I ended up looking after several developer products. Once I launched a few of these products, I switched back to engineering, this time as an engineering leader for cloud products.\r\n\r\nAfter several years at the telco, an opportunity came up to join Canonical, the makers of Ubuntu, where I have been for about 2 years now leading a team automating operations of data centres.",
        "Title": "I want to deploy my Flask app",
        "Type": "Talk",
        "Abstract": "After creating a great web app using Python such as with flask, the next hurdle to production is how to make it available to users and operate it. And not just your app, but also ingress, the database, observability and the list goes on. We will go through your options for simplifying the operations of your web app using open source tooling. This will include using k8s directly with helm charts, PaaS using fly.io and new tooling developed by Canonical using juju. By the end of the talk you will have seen the benefits and drawbacks of each which will help you make an informed decision on which tool best suits your needs!",
        "Description": "To show the audience their options for how to deploy web apps, such as flask, using open source tooling. The benefits and drawbacks of several open source tools will be explored and the audience will walk away having seen their options including, how to use them and their advantages and drawbacks. This will enable them to make an informed decision for how to simplify their operations!",
        "Name": "David Andersson"
    },
    {
        "Image": "images/speakers/Christophe_Bornet.jpg",
        "Biography": "Christophe is a Senior Software Engineer at DataStax working on AI frameworks. Through his love for open source, he is also a LangChain Community Champion, an Apache Pulsar committer and a core team member of JHipster and OpenAPI-generator projects.",
        "Title": "Query your structured data with a LangChain AI agent",
        "Type": "Talk",
        "Abstract": "In this talk, we will explore the capabilities of LangChain, a versatile framework tailored for the development of applications powered by Large Language Models (LLMs).\r\nWe will see how to use LangChain to build advanced AI applications with autonomous AI agents.",
        "Description": "In this talk, we will explore the capabilities of LangChain, a versatile framework tailored for the development of applications powered by Large Language Models (LLMs). \r\nBy bridging the gap between LLMs and sources of context, such as prompt instructions and few-shot examples, LangChain empowers applications to understand and reason about user queries effectively.\r\nWith over 90k stars on GitHub, LangChain stands as the leading Generative AI framework in terms of adoption.\r\nDuring the presentation, attendees will witness a live demonstration showcasing LangChain's SQL agent in action. The agent will autonomously choose available tools to get information about the database schema, select relevant \u201cgolden sample\u201d queries from a vector store that will reduce so-called hallucinations from the LLM, call the LLM to get a text-2-SQL answer, execute the query on the database, and build an answer from the query result to the initial question.",
        "Name": "Christophe Bornet"
    },
    {
        "Image": "images/speakers/Lars_Holmberg.png",
        "Biography": " ",
        "Title": "Write load tests in Python and run them in the cloud in 15 minutes",
        "Type": "Workshop",
        "Abstract": " ",
        "Description": " ",
        "Name": "Lars Holmberg"
    },
    {
        "Title": "Boring Releases: How We Ship Every Week Without Drama",
        "Type": "Talk",
        "Abstract": "In this talk I want to tell you the story of how my best friend pulled me into working with a customer because he, the architect, needed \"an adult person in the room\" before scaling the team. I want to talk about how we built the back-end team of a Django system, added order, structure, and collaboration, where there was loose coordination between individuals spread out globally before. \r\n\r\n\tOur mission: to introduce stability, structure, and \"boring releases\" to a Django-based project while releasing frequently. Because quite frankly, we're too old for adrenaline-filled midnight deployments.\r\n\r\n\tSmall controlled releases, incremental improvements to development and test environments, and smooth automation that allows testing almost anything locally, in CI, or in test environments. Using Jenkins and Invoke (pyinvoke.org) we have setup multiple automated \"full\" test environments for acceptance testing and to reproduce hard-to-analyze bugs - and don't get me started on how valuable having nightly, fresh, and PII cleaned production data ready at our fingertips is.\r\n\r\n\tReleases every week, over and over again, wouldn't be possible with loose coordination though, we have workflows that ensure we keep our house in order, from capturing requirements and making mock-ups, to how our project board, release logs, and release announcements work.\r\n\r\n\tI'm going to talk about how I built in support for automatically created test data in our Django back-end with the coaching from my team of developers, and how I learned to become best friends with the Django shell to manipulate the system under test to create and inspect resources.\r\n\r\n\tThis is a story and about how our team - distributed over three continents - built our way of working to go fast and to ship boring, predicable releases, every single week since 2021 - excluding holidays.",
        "Description": "In this talk I want to tell you the story of how my best friend pulled me into working with a customer because he, the architect, needed \"an adult person in the room\" before scaling the team. I want to talk about how we built the back-end team of a Django system, added order, structure, and collaboration, where there was loose coordination between individuals spread out globally before. \r\n\r\n\tOur mission: to introduce stability, structure, and \"boring releases\" to a Django-based project while releasing frequently. Because quite frankly, we're too old for adrenaline-filled midnight deployments.\r\n\r\n\tSmall controlled releases, incremental improvements to development and test environments, and smooth automation that allows testing almost anything locally, in CI, or in test environments. Using Jenkins and Invoke (pyinvoke.org) we have setup multiple automated \"full\" test environments for acceptance testing and to reproduce hard-to-analyze bugs - and don't get me started on how valuable having nightly, fresh, and PII cleaned production data ready at our fingertips is.\r\n\r\n\tReleases every week, over and over again, wouldn't be possible with loose coordination though, we have workflows that ensure we keep our house in order, from capturing requirements and making mock-ups, to how our project board, release logs, and release announcements work.\r\n\r\n\tI'm going to talk about how I built in support for automatically created test data in our Django back-end with the coaching from my team of developers, and how I learned to become best friends with the Django shell to manipulate the system under test to create and inspect resources.\r\n\r\n\tThis is a story and about how our team - distributed over three continents - built our way of working to go fast and to ship boring, predicable releases, every single week since 2021 - excluding holidays.",
        "Name": "Kristoffer Nordstrom"
    },
    {
        "Image": "images/speakers/Petter_Salminen.jpg",
        "Biography": "Petter is an consultant in Stockholm, who has a wide range of experience in programming, and many different languages. He strives to build high quality systems, and together with his co-workers become better every day at what they do - creating systems to help people.",
        "Title": "It's About Time",
        "Type": "Talk",
        "Abstract": "**It's About Time** is set out to be an overview of time programming, to enlighten about the particular pitfalls and general problem space that we face when programming around the context of time.\r\n\r\nWe will look at some key points:\r\n- Serialisation and the representation of time\r\n- Accessibility when presenting date/time on the web\r\n- Good practices for API design (OpenAPI specification)\r\n- Timezones and Daylight savings\r\n- Special Relativity, and how this can make things even weirder\r\n- What I would consider to be best practices when writing code in python.\r\n\r\nHopefully, put purely speculative I hope that my talk may be inspiring in getting people to have a peek into the pandora's box which is time - in order to help people understand that maybe everything is not always as easy as we assume them to be.\r\n\r\nThis talk has been presented once at the university of KTH at its full length (not recorded), and a much cut down version during PyCon 2022 [as a lightning talk](https://youtu.be/TXRvuv9TRSw?t=369). But I am excited for the opportunity and the great honour of present the full version.",
        "Description": "We're starting the talk by presenting what and why we're talking about time. Some common misconceptions around time, which mostly all stem from human presumptions about how time works. Many of them are due to simplifications we as a species have made. \r\n\r\nSome thoughts about accessibility, and what may be important to think about when presenting time to users.\r\n\r\nThen we go though the localisation of time, as example, famously middle-endian-ness that more often than not create confusion between cultures.\r\n\r\nWe will go through timezones, and how they are subject to change over time, and how even some countries like Sweden use \"daylight savings\" to make things even more confusing. All countries don't even apply the DST at the same time, or even through the whole country as a whole creating endless confusion.\r\n\r\nWe will go though one of the greatest inventions for helping us with coordinating time around the globe, the synchronisation of atomic clocks, and what the strange(?) definition of a second precisely is. \r\n\r\nAnd then once we think we had a good solution, A wrench is thrown into our gears, as special relativity and the universe itself steps into the mix. Luckily we won't have much problems just on earth, but if you're programming things like GPS satellites, then you're affected.\r\n\r\nThen we land back on earth, and stalk about python programmings - tips and tricks in particular. Like how one should not use `date.utcnow()` *(as stated in the documentation)*, using `timedeltas`and remembering the inclusion of  `tz` in dates.\r\n\r\nI will also mention the excellent `freezegun` package and how one could more easily write test code around code that otherwise may be hard to test.",
        "Name": "Petter Salminen"
    },
    {
        "Image": "images/speakers/Fredrik_H\u00e5\u00e5rd.jpg",
        "Biography": "Fredrik is a software developing freelancer, and in 20ish years has worked in \u201call of the industries\u201d in almost every role from tech lead to tester. In his career he has worked with everything from tiny startups to huge enterprise companies and he\u2019s currently the Django lead at Codepath.\r\n\r\nRefusing to overly specialize or ever (again) accepting a management role, he combines a long and broad experience in software development with both technical and organizational skills. Recent work has focused on building teams, securing data and processes, and making sure that things go faster and/or cheaper. Once upon a time, he instigated a conference. He is lazy by nature, which is why he automates things obsessively.",
        "Title": "Log and explore everything in Django",
        "Type": "Workshop",
        "Abstract": "While there are a multitude of platforms to collect logs and metrics from \"any platform\", sometimes all you want is to collect the logs you need, in the format you want, and pass it on or store it without adding third party libraries, servers, and accounts. Sometimes, you may even want to write the next great log aggregation tool, not use an existing. This talk is about utilising a few different methods to create, enrich, and store log and audit data using only what comes in the box with a new Django project, and end up with rich, explorable log and audit data.",
        "Description": "Any system with lots of users and complexity will need good logs for troubleshooting and a lot of systems will also need it for audit purposes. Adding more context and structure to logs allow it to be used for more - such as metrics - and allowing it to be explorable in relation to live data can make logs into a powerful tool for customer support and post incident investigations alike.\r\n\r\nIn this session, we'll explore several techniques to create usable data and expose it for exploration whether it's for audit trails or just a structured way to investigate the data behind the scenes. We'll contrast different ways of achieving the same goals, to give an overview of the trade-offs involved when rolling your own.",
        "Name": "Fredrik H\u00e5\u00e5rd"
    },
    {
        "Image": "images/speakers/Dominik_Haitz.jpg",
        "Biography": "Dominik is a Senior Data Scientist at Otto Group data.works in Hamburg. He has previously worked at E.ON and IONOS and has a background in particle physics (KIT/CERN).",
        "Title": "Shopping Assistants with GenAI: Frameworks, Prompt Evaluation, LLMOps and more",
        "Type": "Talk",
        "Abstract": "Developing LLM-based products in Python comes with a lot of questions: Should I use an existing LLM framework? How to evaluate models and prompts? Should I use RAG? How to prevent prompt hacking?This talk will share lessons learned and best practices from putting several shopping assistant chatbots into production.",
        "Description": "This talk details my experience for all steps of developing and productionizing several chatbots in Python:\r\n\r\n\ud83d\udee0\ufe0f Pros and cons of using LLM frameworks (e.g. Langchain)\r\n\ud83e\udd14 Do I even need an LLM?\r\n\ud83d\ude80 Building chatbot backends with FastAPI\r\n\ud83d\udcca Different LLM evaluation approaches\r\n\ud83d\udd0e RAG: vector search details & vector store solutions\r\n\ud83d\udee1\ufe0f Defend against prompt hacking\r\n\u2705 Testing and CI/CD \r\n\ud83d\udcc8 Monitoring solutions \r\n\ud83d\ude4b Don't forget the users!",
        "Name": "Dominik Haitz"
    },
    {
        "Title": "Advanced parsing of structured data using Python's new match statement",
        "Type": "Talk",
        "Abstract": "The `match` statement was introduced in Python 3.10, but has not yet seen wide adoption. This talk will highlight practical use cases for parsing JSON, XML and ASTs, and compare expressiveness and performance to the classic if-elif-else approach.",
        "Description": "The `match` statement was introduced in Python 3.10, but has not yet seen wide adoption.\r\n\r\nIn this talk, I'd like to showcase a few more advanced use cases to demonstrate it's expressiveness and versatility, compared to classic parsers using if-elif-else chains, in the hope of attracting a few more Python users to the new concept in Python.\r\n\r\nWe will have a look at parsing JSON, XML and ASTs, and also compare performance to the classic parsing strategy.\r\n\r\nKnowledge of how the `match` statement works and familiarity with at least one of JSON, XML and ASTs are prerequisite for this talk.",
        "Name": "Marc-Andre Lemburg"
    },
    {
        "Image": "images/speakers/Marcus_N\u00e4slund.jpg",
        "Biography": "Has been tinkering with code in some form for the past 20 years, currently Tech Lead at Kognity. Also a popular science author, with the latest book En Summa av \u00d6gonblick due for release soon. Passionate about education, mathematics, chess, and opinionated style checkers.",
        "Title": "Let's goto work",
        "Type": "Talk",
        "Abstract": "Languages evolve. But how? The infamous \"goto\" keyword, which for good reason is missing from Python, is a surprisingly \"easy\" feature to add! Learn how a programming language like Python evolves over time and how new features are added via Python Enhancement Proposals (PEPs). In the process, you'll learn different ways of implementing the goto keyword in Python, and why XKCD number 292 is true.",
        "Description": "Jumping to another piece of code is an essential part of how computer instructions are written, but a \"raw\" goto is generally considered bad practice outside of assembler. Today, we instead have while-loops and methods and all sorts of meaningful abstractions. There are also still valid usecases, even if they're few.\r\n\r\nThrough the eyes of a fictitious Python Enhancement Proposal (or PEP) for implementing the goto keyword, we will examine the path a PEP takes in real life, the transparent development process of the Python Software Foundation. We will also look at some actual implementations of a python goto keyword, and end up with a brand new goto-enabled version of CPython.\r\n\r\nWhat started me on this adventure was a project to port 1980s text-based game in BASIC to modern Python. Due to the game's old age, it relies heavily on the kind of \"spaghetti code\" that was typical at the time, but as it turns out, it's not that difficult to add the goto functionality in python either! You might not want to actually do it, of course, but I learnt a lot from attempting it, and hopefully you will too.",
        "Name": "Marcus N\u00e4slund"
    },
    {
        "Image": "images/speakers/Magdalena_Stenius.jpg",
        "Biography": "Magdalena Stenius is a backend engineer specialized in working with machine learning use cases. She has a long track record of building both tooling for ML engineering as well as working with large scale recommender models, and most of her career has been spent in the python ecosystem. She is currently a backend engineer as well as on-call engineer at Wolt.",
        "Title": "Through the ups and downs and beyond - a down-to-earth guide to site reliability",
        "Type": "Talk",
        "Abstract": "\u201cYou\u2019re not Google, and neither are we!\u201d is a common sentence we hear when someone mentions SRE, or site reliability engineering. SRE as a term has gotten the label of unattainable and hyperscale software management - but we\u2019re going to rectify that! In this talk, we walk through a more practical approach to keeping your software services running in sun and rain.",
        "Description": "The goal of this talk is to give the audience a good and practical insight into ways of increasing and ensuring their software systems reliability. We introduce the concept of SRE (site reliability engineering) as well as its history and critique. We then proceed to walk through some practical examples of reliability practices including \r\nWhat to monitor, why and how\r\nWhat service level agreements are and how to use them\r\nHow to look at your service from an on-call perspective (what can break and how can we guard against that)\r\nHow load testing can be used both continuously and to learn about how your software behaves in different scenarios\r\nAll of these will include some of my real-life experiences and incidents I have seen when working as a backend engineer and doing on-call shifts.",
        "Name": "Magdalena Stenius"
    },
    {
        "Image": "images/speakers/Petr_Savelyev.jpg",
        "Biography": "I have over 15 years of experience in Python development, with a focus on network management and the Netlink protocol.",
        "Title": "A challenge of converting a project's core to asyncio",
        "Type": "Talk",
        "Abstract": "Pyroute2 is a relatively large project with a history spanning about 10 years, primarily built around synchronous, threading-oriented code. One of the most popular and longstanding user requests has been to implement support for asynchronous parallelism. This task presents numerous challenges, ranging from continuous integration (CI) to maintaining compatibility, as the project must continue to support its existing synchronous code.",
        "Description": "This talk will offer a brief review of both the successful decisions and the mistakes made throughout the development of our project, with the hope that others can learn from our experiences.\r\n\r\nAgenda:\r\n\r\n    Introduction: An overview of the library \u2014 what it is, where it's used, and the reasons it initially did not employ asyncio.\r\n\r\n    Custom Event Loops: Why we tried to implement our own event loops, and why these decisions proved to be a mistake.\r\n\r\n    Transition to asyncio: Migrating to asyncio, highlighting how this transition reduced the codebase and simplified the architecture.\r\n\r\n    Maintaining Compatibility: How we maintain compatibility with the old synchronous code and address the challenges of supporting long-term stable (LTS) versions.\r\n\r\n    CI Challenges: The issues we've encountered with continuous integration (CI) both in the past and present, along with the strategies we've adopted to mitigate them.\r\n\r\nBonus: I\u2019ll also touch on the decision to integrate protocol 9P as the standard inter-process communication (IPC) mechanism within the library.",
        "Name": "Petr Savelyev"
    },
    {
        "Image": "images/speakers/Ulrik_S\u00f6dergren.jpg",
        "Biography": "Ulrik solves odd problems by using broad knowledge on software, electronics and image processing via his own consulting company called OddTech. He has worked for clients such as IKEA, Hasselblad and \u00d6resundsbron. He is currently helping Luxbright to automate their X-ray tube factory and research labs. \r\nPython is his favourite programming language \u2013 after to many years with Java, C and PHP.\r\nUlrik used to write for DatorMagazin and he also has a background as professional photographer and educator in photography.",
        "Title": "Controlling lab and production equipment with Python",
        "Type": "Talk",
        "Abstract": "In this talk you will learn how to control and monitor physical hardware to automate repetitive work in electronics, X-ray or any other research laboratory using Python. \r\n\r\nThis is also the story about how we decided to replace traditional expensive industrial and lab control solutions such as PLC:s and LabView with Raspberry Pi:s and Python programs. It all started in the R&D lab, then we continued to automate our production using the same tool chain.\r\n\r\nI will talk about some common communications protocols and show sample code for using them with open-source Python packages. Many of those protocols can be used even with cheap instruments found in hobby workshops. Why not automate your beer brewing or your green house?",
        "Description": "The audience for this talk is not only those who work at research labs or industries. The same libraries and methods can be used in your hobby workshop.\r\n\r\nBackground\r\nThe story about how we automated our X-ray R&D lab with Python and cheap hardware, such as Raspberry Pi and IO-cards. And how we later built a small factory for X-ray tubes and reused the same framework of Python programs and Raspberry PI to automate key ingredients in the production line.\r\n\r\nOur use case\r\nDescription of how we use a modular distributed system of Raspberry Pi:s for interfacing with various types of hardware. Then a central UI application running on Mac or Windows for user interaction, plotting, automation.\r\n\r\nSome examples on how to connect hardware using open-source python libraries:\r\n\u2022\tConnect to analogue equipment with Raspberry Pi and a cheap IO-card. Code sample for using cards from Pi-plates for monitoring analogue and digital signals.\r\n\r\n\u2022\t1-wire \u2013 this simple protocol for temperature measurements. Code samples for using cheap parallel connected temperature sensor to monitor temperature in several points.\r\n\r\n\u2022\tUse PyVisa for Power Supplies and Measurement Instruments. I will show code sample for measuring current using a network connected multimeter.\r\n\r\n\u2022\tUse serial ports for vacuum pumps, X-ray sources and almost any type of industrial equipment. PyModbus for industrial equipment. Serial or aioserial to implement support for proprietary protocols.\r\n\r\nChallenges when testing software driving physical hardware:\r\n\u2022\tDon\u2019t expect exact values as response\r\n\u2022\tThe hardware is not always available \u2013 create simulators\r\n\u2022\tTiming problems\r\n\r\nDon\u2019t forget safety! Some hints on how to mitigate safety problems:\r\n\u2022\tUse interlocks to monitor doors.\r\n\u2022\tWarning lights\r\n\u2022\tSafety breakers\r\n\u2022\tUse multiple layers. Implement safety systems in both hardware and software",
        "Name": "Ulrik S\u00f6dergren"
    },
    {
        "Image": "images/speakers/Sophie_Cassidy.png",
        "Biography": "Sophie is a Senior Backend Engineer at Lyst, a leading shopping platform that elevates the online shopping experience for customers globally.\r\n\r\nAs a key member of the Product Data team, she plays a crucial role in ensuring that Lyst\u2019s customers and internal teams have access to high-quality, accurate inventory data and that Lyst delivers a seamless and valuable integration experience for its partners. She is passionate about collaboration and problem-solving and thrives when diving into new challenges alongside fellow engineers.\r\n\r\nIn addition to her technical role, Sophie is an active member of Lyst\u2019s Women in Engineering committee. She has spearheaded initiatives such as a work experience programme in partnership with Next Tech Girls and an internal, female-focused mentorship programme aimed at fostering growth and support for women in tech.",
        "Title": "Mastering Generative AI with Python: A Hands-On Workshop with OpenAI and Anthropic",
        "Type": "Workshop",
        "Abstract": "AI is a hot topic these days! However it's not always clear how to get the best use of it, how to test and trust it, and how to build it into your product. In this workshop, we will explore practical applications of Generative AI with Python, focusing on AI models like OpenAI\u2019s GPT-3-5 and Anthropic\u2019s Claude.\r\n\r\nAt Lyst, we have been using OpenAI and Anthropic for the past year in various ways. We will share insights from our own work, where AI has significantly enhanced our day-to-day operations. Using OpenAI to tag customer feedback sentiment has enabled employees to extract actionable insights from large volumes of data, improving decision-making and customer understanding. Using Anthropic's AI models to create product titles has resulted in unique, more descriptive content on Lyst's platform, which has increased customer engagement and sales.\r\n\r\nIn this interactive and engaging workshop, we want attendees to get hands on with these AI models. We'll have OpenAI and Antropic credits for attendees to use, and the workshop will cover essential best practices, prompt engineering strategies to get the model to do what you need it to do, strategies for testing and evaluating, and what to keep in mind when incorporating the model into your product. Ratuja and Sophie have learned a lot of this through trial and error and are excited to share their learnings with the group.\r\n\r\nWe have a dataset where attendees can use AI prompts to enhance the data and serve it in a Django App. This workshop will both give a high level overview of best practices when incorporating AI into your application and give technical users a chance to play around and learn for themselves.",
        "Description": "In this workshop, we will be giving attendees a hands-on approach to using AI models in Python applications, specifically OpenAI\u2019s GPT-3-5 and Anthropic\u2019s Claude.\r\n\r\nRatuja and Sophie are senior backend engineers at Lyst, a fashion marketplace containing over 8 million products. Because of this, we need to make sure we have scalable and robust architecture.\r\n\r\nWe have experimented with using Generative AI to aid this. Ratuja built a Django application using OpenAI to tag themes of customer reviews - allowing us to understand customers better. Sophie used Anthropic models to improve descriptions of products, making them better for customers. She tested various models to find the best one for her use case before implementing in production. We learned a lot through this process and are keen to share more in this workshop!\r\n\r\nThe workshop will follow the structure:\r\n- Overview of Generative AI; using technologies like OpenAI and Anthropic in production\r\n- Overview of the models and choosing the right one for your needs. \r\n- Best practices for prompt engineering.\r\n- Testing strategies to validate your model is performing.\r\n- Attendees get hands on! They will download a dataset and a partially built Django App . They\u2019ll get to use OpenAI and Anthropic credits to enrich the dataset and productionize their models.\r\n- Wrap up, the group can share learnings and discuss ideas they have for using AI in their own projects.\r\n\r\nWe hope this workshop will be useful for Python developers interested in incorporating AI into their work. We believe AI is not a fad and will continue to grow. There\u2019s so much information online; it\u2019s hard to know where to start. With the interactive workshop, we want attendees to leave understanding the basics and best practices in a way which will be transferable to many use cases!",
        "Name": "Sophie Cassidy"
    },
    {
        "Image": "images/speakers/Christian_Heitzmann.jpg",
        "Biography": "Christian Heitzmann is a Java-, Python- and Spring-certified software developer with a CAS in Machine Learning and owner of SimplexaCode in Lucerne, Switzerland. He has been developing software for over 20 years and has been teaching classes and courses for over 12 years in the areas of Java and Python programming, mathematics, and algorithms. As a technical writer, he documents software architectures for companies and regularly writes articles for IT journals.",
        "Title": "Documenting Python Code",
        "Type": "Talk",
        "Abstract": "Unlock the power of well-documented code! Join me for a quick dive into Python documentation essentials\u2014learn about Docstrings, Sphinx, reStructuredText, and embracing a docs-as-code approach with different markup languages. Keep your code usable and maintainable. Let\u2019s document smarter, not harder!",
        "Description": "Yes, folks, software documentation is important! So far, you\u2019ve benefited from well-documented Python libraries, so it\u2019s only natural to document your own code in order to keep your software usable and maintainable.\r\n\r\nHowever, the first step is often the most difficult. Therefore, this talk will provide an introduction to documenting Python code effectively. You will learn about the basic concepts of Docstrings, the Sphinx documentation generator, and the standard lightweight markup language reStructuredText. You will also learn about the benefits of a docs-as-code approach in general, and find an answer to the question of whether Python can also be documented using other markup languages.",
        "Name": "Christian Heitzmann"
    },
    {
        "Image": "images/speakers/Phil_Ewels.jpg",
        "Biography": "Phil Ewels is Product Manager for Open Source at Seqera. He holds a PhD in Molecular Biology from the University of Cambridge, UK and has a career that has spanned many disciplines from scientific lab work and computational bioinformatics research in the life sciences, through to software development and community engagement. He is passionate about open-source software and has a soft spot for tools with a focus on user-friendliness. He is author of MultiQC, co-founder of the nf-core Nextflow bioinformatics community and creator of many pet projects.",
        "Title": "Accidentally popular: Beautiful CLI interfaces with rich-click",
        "Type": "Talk",
        "Abstract": "In the past few years, Will McGugan's [Rich](https://github.com/Textualize/rich) for formatting terminal outputs has had a meteoric rise in the Python community. As a user and fanboy of Rich, I felt that my otherwise beautiful CLI tools had drab and plain help text outputs from the [Click CLI toolkit](https://github.com/pallets/click).\r\n\r\nWith a little help from Will and others, I put together the [rich-click](https://github.com/ewels/rich-click) package that makes Click's outputs delight your eyeballs with only a simple import alias required: `import rich_click as click`.\r\n\r\nIn this talk I'll describe a little bit about how it works and what you can use it for, and how I dealt with it becoming accidentally quite popular and receiving a deluge of issues and contributions. Spoiler: the Python open-source community is amazing and Daniel Reeves ([@dwreeves](https://github.com/dwreeves)) came to my aid to co-maintain the project \ud83c\udf89",
        "Description": "Do you love \ud83c\udf08s, \ud83e\udd84s and \ud83d\udda5\ufe0fs? Maybe throw in a little open-source \u2764\ufe0f and \ud83e\udd17, then this talk is for you.",
        "Name": "Phil Ewels"
    }
]
